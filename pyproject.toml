[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "onyo"
authors = [
    {name = "Alex Waite", email = "alex@waite.eu"},
    {name = "Tobias Kadelka", email = "t.kadelka@fz-juelich.de"},
    {name = "Benjamin Poldrack", email = "benjaminpoldrack@gmail.com"},
]
description = "Textual inventory system backed by git"
readme = "README.md"
requires-python = ">=3.11"
keywords = ["inventory", "git"]
license = {text = "ISC"}
classifiers = [
    "Programming Language :: Python :: 3",
]
dependencies = [
    "ruamel.yaml",
    "rich",
    "natsort",
    "fastnumbers"  # not strictly neccessary, but makes natsort's number parsing faster
]
dynamic = ["version"]

[project.urls]
"Bug Reports" = "https://github.com/psyinfra/onyo/issues"
"Source" = "https://github.com/psyinfra/onyo/"

[project.optional-dependencies]
tests = [
    'Faker',
    'pyre-check',
    'pytest',
    'pytest-benchmark',
    'pytest-cov',
    'pytest-randomly',
    'ruff',
]
docs = [
    'Faker',
    'pytest',
    'sphinx',
    'sphinx-argparse',
    'sphinx-autodoc-typehints',
    'sphinx-rtd-theme',
    'typing-extensions',
]

[project.scripts]
onyo = "onyo.main:main"

[tool.setuptools_scm]
version_file = "onyo/_version.py"

## Resources
# All non-.py files in git are included as data files.
# Untracked files must be listed in MANIFEST.in.
[tool.setuptools.packages]
find = {}  # Scanning implicit namespaces is active by default

[tool.ruff]
exclude = ["build/"]
lint.ignore = [
    "D100",  # Missing docstring in public module
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D202",  # No blank lines allowed after function docstring (found {num_lines})
    "D205",  # 1 blank line required between summary line and description
    "D401",  # First line of docstring should be in imperative mood: "{first_line}"
    "E501",  # Line too long (82 > 79 characters)
]
lint.select = [
    "D",
    "E",
    "F",
    "W",
]
lint.pydocstyle.convention = "numpy"
